#version: '3.1'

name: myapp

services:
  flask_web:
    # Путь до Dockerfile
    build: .
    # Имя для создаваемого контейнера
    container_name: web
    # Создание переменных окружения в контейнере
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=${DATABASE_URI}
      - SQL_HOST=localhost
      - SQL_PORT=5432
      - DATABASE=rest
      ## Позволяет отслеживать процесс работы приложения в командной строке
      - PYTHONUNBUFFERED=True
    restart: unless-stopped
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    command: python run.py run -h 0.0.0.0
  postgres:
    hostname: postgres
    image: postgres:latest
    env_file:
      - .env
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - flaskdb:/var/lib/postgresql/data
    networks:
      - backend
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
    networks:
      - backend
volumes:
    flaskdb:
      driver: local
    pgadmin:
      driver: local
networks:
  backend:
    driver: bridge
